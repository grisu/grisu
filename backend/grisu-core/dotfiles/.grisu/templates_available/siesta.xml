<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<JobDefinition xmlns="http://schemas.ggf.org/jsdl/2005/11/jsdl">
		<GrisuTemplate xmlns="http://arcs.org.au/jsdl/jsdl-grisu">
		<Email 	template="Email" 
					   	name="EmailAddress"
						description="The email address to send an email to if the job status changes."
						multiplicity="?" 
						other="useLastValue" />
		</GrisuTemplate>

	<JobDescription grisu_modules="MatchMakerPanel">

		<JobIdentification>

			<!-- The JobName template type renders a panel that is kind of 
				smart about which jobnames already exist and can suggest or automatically
				fill in appropriate jobnames according to the user-input/defaultValue that
				is set.
			-->
			<JobName defaultValue="siesta_generic" description="The name of the job." name="Jobname" other="autosuggest,nosuggestbutton" template="JobName">siesta_generic_1</JobName>

		</JobIdentification>

		<Application>
			<!-- 	The ApplicationName is a generic name for an application. It does not
				contain the path or anything else. This name could be used by mds to figure
				out where the application is supported.
				It is also used by Grisu to determine whether an application-specific viewer 
				panel for this application exists so if you want to use one of these then you
				need to know what the name is that Grisu expects.
			-->
			<ApplicationName>siesta</ApplicationName>
			<ApplicationVersion template="ApplicationVersion" name="Version" title="Version" description="The version of paup" other="useAny,useExact"/>
			
			<Description>
				SIESTA description
			</Description>
			<POSIXApplication xmlns="http://schemas.ggf.org/jsdl/2005/11/jsdl-posix">

				<!-- 	The path to the executable. If you load a module you may not need the
					path and the name of the executable is enough.
				-->
				<Executable>siesta</Executable>

				<WorkingDirectory />
				
				<!-- 	The name of the standard input file. -->
				<Input substitute="STDINPUTFILE[basename]"> </Input>
				<!-- 	The name of the standard output file. -->
				<Output substitute="STDINPUTFILE[basenamechangeextension:(sot)]"> </Output>
				<!--  	The name of the standard error file. -->
				<Error>stderr.txt</Error>
				
			</POSIXApplication>

			<!-- The total cpu time in seconds. Since the jsdl standard uses this instead
				of the concept of walltime we know we need to multiply this value with
				the amount of cpus (which the postprocess instruction does). 
			-->
			<TotalCPUTime defaultValue="600" description="The total cpu time in seconds." multiplicity="1" name="Walltime" postprocess="TimesNoCPUs" template="InputInteger">1200</TotalCPUTime>

			<TotalCPUCount><exact defaultValue="2" description="How many CPUs do you want to use to run this job." multiplicity="1" name="CPUs" prefills="2,4,8" template="InputInteger" other="force=parallel"/></TotalCPUCount>

			<TotalPhysicalMemory> 
				<LowerBoundedRange postprocess="ConvertToBytes" defaultValue="0" description="The minimum amount of memory in mb for this job." multiplicity="1" name="MinMem" prefills="0,1024,2048,4096" template="InputInteger"> </LowerBoundedRange>
			</TotalPhysicalMemory>
			
		</Application>
		<Resources>
		
			<CandidateHosts>

				<HostName name="HostName" template="InputString"> </HostName>

			</CandidateHosts>

		</Resources>
		<!--  The following DataStaging element -->

		
		<DataStaging>
			<FileName />
			<FileSystemName></FileSystemName>
			<Source>
				<URI template="InputFile" name="A_Siesta_StdInputFile"
					title="Please select your SIESTA input file (.fdf)"
					multiplicity="1"
					other="render=combobox,useHistory"
					postprocess="Substitute[name=STDINPUTFILE]" />
			</Source>
			</DataStaging>
			<DataStaging>
			<FileName></FileName>
			<FileSystemName></FileSystemName>
			<Source>
				<URI title="Files to include with SIESTA input file - eg. psf, vsp, DM, CG, XV etc." multiplicity="*" name="OptionalFiles" template="MultipleInputFiles"  validator="InputFile" other="hideDescription" ></URI>
				<!--<URI title="Files to upload for SIESTA job - include fdf, psf, vsp, DM, CG, XV etc." multiplicity="*" name="OptionalFiles" other="directoryKey=NAMD" postprocess="FillDataStagingFileNameElement" template="MultipleInputFiles"  validator="InputFile"></URI>-->
			</Source>
		</DataStaging>

	</JobDescription>
</JobDefinition>
